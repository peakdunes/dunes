@using DUNES.Shared.DTOs.Inventory
@using DUNES.UI.WiewModels
@model PickProcessRequestDto
@{
    ViewData["Title"] = "Receiving";
}



<div class="modal fade" id="modalBinsDistribution" tabindex="-1" aria-labelledby="miModalLabel" aria-hidden="true">
    <div class="modal-dialog  modal-xl">
        <div class="modal-content">

            <div class="modal-header">
                <h5 class="brand-subtitle" id="miModalLabel">WMS Warehouse Distribution</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-md-3" style="display:display">
                        <div class="form-group">
                            <label class="control-label">Part Number</label>
                            <input id="partnoid" readonly="readonly" class="form-control" />

                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">Line</label>
                            <input id="lineid" readonly="readonly" class="form-control" />

                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="form-group">
                            <label class="control-label">Qty</label>
                            <input type="number" readonly="readonly" style="text-align:right" id="qtyreceive" class="form-control" />

                        </div>
                    </div>


                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="control-label">WMS Reserve Inv Type</label>
                            <select id="typereserveid" class="form-control">
                            </select>

                        </div>
                    </div>

                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="control-label">WMS Reserve Bin</label>
                            <select id="binselid" class="form-control">
                            </select>

                        </div>
                    </div>
                </div>



                <div class="row mt-2">
                    <div class="col-md-12">
                        <h4 class="brand-subtitle">Part Number Qty in WMS Bins</h4>
                        <table id="tableuserbinitems" class="table table-bordered no-wrap table-striped table-hover table-sm align-middle w-100" style="width:100%;font-size:small">

                            <thead>
                                <tr>
                                    <th>
                                        Bin Id
                                    </th>
                                    <th>
                                        Bin Name
                                    </th>
                                    <th>
                                        Inventory Type
                                    </th>
                                    <th>
                                        Inventory Name
                                    </th>
                                    <th>
                                        Status Id
                                    </th>

                                    <th>
                                        Status Name
                                    </th>

                                    <th style="text-align:right">
                                        Qty
                                    </th>
                                    <th style="text-align:right">
                                        Qty Pick Process
                                    </th>
                                </tr>
                            </thead>

                        </table>
                    </div>

                </div>

            </div>

            <div class="modal-footer">

                <input type="button" onclick="addqtybinPickProcess()" class="btn btn-outline-primary" value="Save" />

                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
                @* <button type="button" class="btn btn-primary">Guardar</button> *@
            </div>

        </div>
    </div>
</div>

<div class="row mt-4">
    <form id="pick-form" method="get" autocomplete="off" class="mb-3">
        <div class="row g-3 align-items-end">
            <div class="col-12 col-md-6">
                <label for="pickprocessnumber" class="form-label">Pick Process Number</label>
                <input type="text"
                       id="pickprocessnumber"
                       name="pickprocessnumber"
                       class="form-control"
                       placeholder="Scan or type your Pick Process..."
                       required
                       autofocus />
            </div>

            <div class="col-12 col-md-auto d-grid">
                <button type="submit" class="btn btn-primary">Search</button>
            </div>
        </div>
    </form>



    <form id="af" style="display:none">
        @Html.AntiForgeryToken()
    </form>

</div>

<div class="card shadow-sm mb-2">
    <div class="card-header bg-white d-flex justify-content-between align-items-center">
        <h6 class="mb-0 subtitleDunes ms2">Pick Process Header &nbsp; @Model.PickProcessHdr.DeliveryId </h6>
        <a href="#" class="text-decoration-none" onclick="hideheader()">
            <i id="ocultarHdr" class="fa-solid fa-eye"></i>
        </a>
    </div>





    <div class="row gx-3 gy-2 px-3 mt-2 mb-2" id="header1">

        <div class="col-12 col-md-2">
            <label asp-for="PickProcessHdr.Id" class="form-label"></label>
            <input asp-for="PickProcessHdr.Id" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-2">
            <label asp-for="PickProcessHdr.DeliveryId" class="form-label"></label>
            <input asp-for="PickProcessHdr.DeliveryId" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-2">
            <label asp-for="PickProcessHdr.ConsignRequestID" class="form-label"></label>
            <input asp-for="PickProcessHdr.ConsignRequestID" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-3">
            <label asp-for="PickProcessHdr.Batchid" class="form-label"></label>
            <input asp-for="PickProcessHdr.Batchid" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-3">
            <label asp-for="PickProcessHdr.DateCreated" class="form-label"></label>
            <input type="datetime-local" asp-for="PickProcessHdr.DateCreated" readonly class="form-control" />
        </div>
    </div>
    <div class="row gx-3 gy-2 px-3 mb-3" id="header2">
        <div class="col-12 col-md-4">
            <label asp-for="PickProcessHdr.Address1" class="form-label"></label>
            <input asp-for="PickProcessHdr.Address1" readonly class="form-control" />
        </div>


        <div class="col-12 col-md-4">
            <label asp-for="PickProcessHdr.Address2" class="form-label"></label>
            <input asp-for="PickProcessHdr.Address2" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-3">
            <label asp-for="PickProcessHdr.City" class="form-label"></label>
            <input asp-for="PickProcessHdr.City" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-1">
            <label asp-for="PickProcessHdr.State" class="form-label"></label>
            <input asp-for="PickProcessHdr.State" readonly class="form-control" />
        </div>

    </div>
    <div class="row gx-3 gy-2 px-3 mb-3" id="header3">

        <div class="col-12 col-md-1">
            <label asp-for="PickProcessHdr.ZipCode" class="form-label"></label>
            <input asp-for="PickProcessHdr.ZipCode" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-1">
            <label asp-for="PickProcessHdr.Country" class="form-label"></label>
            <input asp-for="PickProcessHdr.Country" readonly class="form-control" />
        </div>

        <div class="col-12 col-md-2">
            <label asp-for="PickProcessHdr.Carrier" class="form-label"></label>
            <input asp-for="PickProcessHdr.Carrier" readonly class="form-control" />
        </div>


        <div class="col-12 col-md-3">
            <label asp-for="PickProcessHdr.ShipMethod" class="form-label"></label>
            <input asp-for="PickProcessHdr.ShipMethod" readonly class="form-control" />
        </div>




    </div>
</div>

<div class="card shadow-sm mb-2">


    <div class="card-header bg-white d-flex justify-content-between align-items-center">
        <h6 class="mb-0 subtitleDunes ms2">Information to process in WMS </h6>
        <a href="#" class="text-decoration-none" onclick="hidedetail()">
            <i id="ocultarDetail" class="fa-solid fa-eye"></i>
        </a>
    </div>


    <div class="row gx-3 gy-2 px-3 mb-3" id="detail1">
        <div class="col-12 col-md-3">
            <label class="form-label">Company Client</label>
            <select id="companyclient" class="form-control" asp-items="@ViewBag.companies">
                <option value="0" selected disabled>Select Client Company</option>
            </select>
        </div>


        <div class="col-12 col-md-3">
            <label class="form-label">Concept</label>
            <select id="conceptid" disabled class="form-control">
            </select>
        </div>


        <div class="col-12 col-md-3">
            <label class="form-label">Transaction Type</label>
            <select id="transactionid" disabled class="form-control">
            </select>
        </div>

        <div class="col-12 col-md-2">
            <label class="form-label">LPN</label>
            <input ID="lpnid" class="form-control" />
        </div>


    </div>

</div>


<div class="card shadow-sm">
    <div class="card-header bg-white">
        <h6 class="mb-0 subtitleDunes">Part Number Detail</h6>
    </div>

    <div class="card-body">
        <div class="row">
            <table id="tableuser" class="table table-bordered table-striped table-hover table-sm align-middle w-100" style="white-space: nowrap; font-size:medium">
                <thead class="table-light">
                    <tr>
                        <th>Actions</th>
                        <th>Id</th>
                        <th>Pick Process Head Id</th>
                        <th>Line Id</th>
                        <th>Part Number</th>
                        <th class="text-end">Request Quantity</th>
                        <th class="text-end">Quantity Process</th>
                        <th>3PL Locator</th>
                        <th>Pick LPN</th>
                        <th>Qty on Hand</th>
                        <th>Part Number Description</th>
                        <th>DateTime Inserted</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.ListItems != null)
                    {


                        foreach (var item in Model.ListItems)
                        {
                            <tr>
                                <td>

                                    <a href="#" onclick="openmodal(@item.LindId,'@item.ItemNumber',@item.RequestQuantity,'@item.Frm3plLocatorStatus')"><i class="fa-solid fa-boxes-stacked"></i></a> | <a href="#" onclick="deleteAllBinsDistribution(@item.LindId)"><i class="fa-solid fa-eraser"></i></a>



                                </td>
                                <td>@item.Id</td>
                                <td>@item.idPickProcessHdr</td>
                                <td>@item.LindId</td>
                                <td>@item.ItemNumber</td>
                                <td>@item.RequestQuantity</td>
                                <td style="color:red">@item.QuantityProcess</td>
                                <td>@item.Frm3plLocatorStatus</td>
                                <td>@item.PickLPN</td>
                                <td>@item.QtyOnHand</td>
                                <td>@item.ItemDescription</td>
                                <td>@item.DateTimeInserted.ToString("yyyy-MM-dd HH:mm")</td>
                            </tr>

                        }
                    }
                </tbody>
            </table>


        </div>
        <div class="row justify-content-end">
            <div class="col-3 col-md-auto d-grid">
                <button type="button" onclick="processPick()" class="btn btn-primary">Process</button>
            </div>
        </div>
    </div>
</div>


<div class="card shadow-sm mt-2">

    <div class="card-header bg-white d-flex justify-content-between align-items-center">
        <h6 class="mb-0 subtitleDunes ms2">Pick Process Calls Information</h6>
        <a href="#" class="text-decoration-none" onclick="hidecalls()">
            <i id="ocultarCalls" class="fa-solid fa-eye"></i>
        </a>
    </div>

    <div class="card-body" id="divbody1">
        <div class="row">
            <table id="tableuserinputcalls" class="table table-bordered table-striped table-hover table-sm align-middle w-100" style="white-space: nowrap; font-size:medium">
                <caption style="caption-side: top; text-align: left; font-weight: bold;">
                    ZEBRA TO PEAKTECH CALLS
                </caption>
                <thead class="table-light">
                    <tr>
                        <th>Actions</th>
                        <th>Id</th>
                        <th>TransactionCode</th>
                        <th>DateTimeInserted</th>
                        <th>Error</th>
                        <th>Processed</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.CallsRead.inputCallsList != null)
                    {


                        foreach (var item in Model.CallsRead.inputCallsList)
                        {
                            <tr>
                                <td>
                                </td>
                                <td>@item.Id</td>
                                <td>@item.TransactionCode</td>
                                <td>@item.DateTimeInserted.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@item.Error</td>
                                <td>@item.Processed</td>

                            </tr>

                        }
                    }
                </tbody>
            </table>


        </div>
    </div>


    <div class="card-body" id="divbody2">
        <div class="row">
            <table id="tableuseroutputcalls" class="table table-bordered table-striped table-hover table-sm align-middle w-100" style="white-space: nowrap; font-size:medium">
                <caption style="caption-side: top; text-align: left; font-weight: bold;">
                    PEAKTECH CALLS TO ZEBRA
                </caption>
                <thead class="table-light">
                    <tr>
                        <th>Actions</th>
                        <th>Id</th>
                        <th>TypeOfCallId</th>
                        <th>TypeOfCallDescription</th>
                        <th>DateTimeInserted</th>
                        <th>AckReceived</th>
                        <th>Result</th>
                        <th>DateTimeSent</th>
                        <th>InProcess</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.CallsRead.outputCallsList != null)
                    {


                        foreach (var item in Model.CallsRead.outputCallsList)
                        {
                            <tr>
                                <td>
                                </td>
                                <td>@item.Id</td>
                                <td>@item.TypeOfCallId</td>
                                <td>@item.TypeOfCallDescription</td>
                                <td>@item.DateTimeInserted.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@item.AckReceived</td>
                                <td>@item.Result</td>
                                <td>@Convert.ToDateTime(@item.DateTimeSent).ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@item.InProcess</td>


                            </tr>

                        }
                    }
                </tbody>
            </table>


        </div>
    </div>

</div>


<div class="card shadow-sm mt-2">

    <div class="card-header bg-white d-flex justify-content-between align-items-center">
        <h6 class="mb-0 subtitleDunes ms2">WMS Inventory Transactions</h6>
        <a href="#" class="text-decoration-none" onclick="hidewms()">
            <i id="ocultarWMS" class="fa-solid fa-eye"></i>
        </a>
    </div>

    <div class="card-body" id="divwms1">
        <div class="row">
            <table id="tableuserwmshdr" class="table table-bordered table-striped table-hover table-sm align-middle w-100" style="white-space: nowrap; font-size:medium">

                <thead class="table-light">
                    <tr>
                        <th>Actions</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Id)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Idcompany)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].CompanyName)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Idtransactionconcept)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].conceptName)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].IdUser)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Datecreated)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Processed)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].IdUserprocess)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Idcompanyclient)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Dateprocessed)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Documentreference)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Observations)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Iddivision)</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.ListTransactions.ListHdr != null)
                    {


                        foreach (var item in Model.ListTransactions.ListHdr)
                        {
                            <tr>
                                <td>Actions</td>
                                <td>@item.Id</td>
                                <td>@item.Idcompany</td>
                                <td>@item.CompanyName</td>
                                <td>@item.Idtransactionconcept</td>
                                <td>@item.conceptName</td>
                                <td>@item.IdUser</td>
                                <td>@item.Datecreated</td>
                                <td>@item.Processed</td>
                                <td>@item.IdUserprocess</td>
                                <td>@item.Idcompanyclient</td>
                                <td>@item.Dateprocessed</td>
                                <td>@item.Documentreference</td>
                                <td>@item.Observations</td>
                                <td>@item.Iddivision</td>

                            </tr>

                        }
                    }
                </tbody>
            </table>


        </div>
    </div>




</div>



<div class="card shadow-sm mt-2">

    <div class="card-header bg-white d-flex justify-content-between align-items-center">
        <h6 class="mb-0 subtitleDunes ms2">ServTrack Order Repair</h6>
        <a href="#" class="text-decoration-none" onclick="hidewms()">
            <i id="ocultarWMS" class="fa-solid fa-eye"></i>
        </a>
    </div>

    <div class="card-body" id="divwms1">

        <div class="row">
            

        </div>
        <div class="row">
            <table id="tableuseritemsservtrack" class="table table-bordered table-striped table-hover table-sm align-middle w-100" style="white-space: nowrap; font-size:medium">

                <thead class="table-light">
                    <tr>
                        <th>Actions</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Id)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Idcompany)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].CompanyName)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Idtransactionconcept)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].conceptName)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].IdUser)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Datecreated)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Processed)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].IdUserprocess)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Idcompanyclient)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Dateprocessed)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Documentreference)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Observations)</th>
                        <th>@Html.DisplayNameFor(model => model.ListTransactions.ListHdr[0].Iddivision)</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model?.ListTransactions.ListHdr != null)
                    {


                        foreach (var item in Model.ListTransactions.ListHdr)
                        {
                            <tr>
                                <td>Actions</td>
                                <td>@item.Id</td>
                                <td>@item.Idcompany</td>
                                <td>@item.CompanyName</td>
                                <td>@item.Idtransactionconcept</td>
                                <td>@item.conceptName</td>
                                <td>@item.IdUser</td>
                                <td>@item.Datecreated</td>
                                <td>@item.Processed</td>
                                <td>@item.IdUserprocess</td>
                                <td>@item.Idcompanyclient</td>
                                <td>@item.Dateprocessed</td>
                                <td>@item.Documentreference</td>
                                <td>@item.Observations</td>
                                <td>@item.Iddivision</td>

                            </tr>

                        }
                    }
                </tbody>
            </table>


        </div>
    </div>




</div>


<form id="af" style="display:none">
    @Html.AntiForgeryToken()
</form>


@section Scripts {




    <script>


          $(document).ready(function(){



                $('#tableuserwmshdr').DataTable({
                   processing: true,
                   deferRender: true,
                   stateSave: true,
                   autoWidth: false,
                   responsive: true,
                   pageLength: 10,
                   "bPaginate": false,
                   "bLengthChange": false,
                   "bFilter": true,
                   "bInfo": false,
                   "bAutoWidth": false,
                   "searching": false
               });


               $('#tableuseroutputcalls').DataTable({
                   processing: true,
                   deferRender: true,
                   stateSave: true,
                   autoWidth: false,
                   responsive: true,
                   pageLength: 10,
                   "bPaginate": false,
                   "bLengthChange": false,
                   "bFilter": true,
                   "bInfo": false,
                   "bAutoWidth": false,
                   "searching": false
               });




                  $('#tableuserinputcalls').DataTable({
                   processing: true,
                   deferRender: true,
                   stateSave: true,
                   autoWidth: false,
                   responsive: true,
                   pageLength: 10,
                   "bPaginate": false,
                   "bLengthChange": false,
                   "bFilter": true,
                   "bInfo": false,
                   "bAutoWidth": false,
                   "searching": false
               });


            $('#tableuserbinitems').DataTable({

                   processing: true,
                    deferRender: true,
                    stateSave: true,
                    autoWidth: false,
                    responsive: true,
                    pageLength: 10,
                    "bPaginate": false,
                    "bLengthChange": false,
                    "bFilter": true,
                    "bInfo": false,
                    "bAutoWidth": false,
                    "searching": false


              });


            $('#tableuser').DataTable
            ({
              processing: true,
              deferRender: true,
              stateSave: true,
              autoWidth: false,
              scrollX: true, // ✅ Habilita scroll horizontal
              responsive: false, // ✅ Evita que se escondan columnas
              pageLength: 10,

              order: [[9, 'desc']],

              columnDefs: [
                { targets: [6], className: 'text-end' },
                { targets: 0, orderable: false, searchable: false, className: 'text-center' }, // Desactiva ordenamiento en Actions
                { targets: '_all', className: 'align-middle' }
              ],

              dom:
                "<'row mb-2'<'col-md-6'l><'col-md-6 text-md-end'f>>" +
                "<'row'<'col-12'tr>>" +
                "<'row mt-2'<'col-md-5'i><'col-md-7'p>>",

              language: {
                search: "",
                searchPlaceholder: "Search...",
                lengthMenu: "_MENU_ entries per page",
                info: "Showing _START_ to _END_ of _TOTAL_ entries",
                infoEmpty: "Showing 0 to 0 of 0 entries",
                infoFiltered: "(filtered from _MAX_ total entries)",
                zeroRecords: "No data available in table",
                paginate: { first: "«", previous: "‹", next: "›", last: "»" }
              }
            });


                 $(function () {
                  const $form = $('#pick-form');
                  $form.on('submit', function (e) {
                    showSpinner();
                  });
            });

          })




        async  function openmodal(lineid, partnumber, qty, typeidst)
          {



              $('#partnoid').val(partnumber);
              $('#lineid').val(lineid);
              $('#qtyreceive').val(qty);


              var lineid = lineid;

              const valsel = $('#companyclient').val();

              if (valsel == 0 || valsel == null)
              {
                   errorAction("Company client is required");
                   return;
              }

              var companyclient = $('#companyclient option:selected').val();

              //we search all inventory cuantity for this companyclient and part number
               showSpinner();

              $.ajax({url:"@Url.Action("checkInventoryByPartNumberInvType", "PickProcess")",data:{companyclient:companyclient, partnumber:partnumber, lineid: lineid, typeidst:typeidst},type:"post"})
              .done(function(data){

                    var $typeNoHand = $('#typereserveid');

                    $typeNoHand.empty()
                        .append($('<option>', { value: '', text: '-- Select Type --', disabled:true, selected:true }))
                        .prop('disabled', true);

                      if (data.status == null || data.status == "OK")
                      {

                          if (data.listinvnohand != null)
                          {

                                var list = (data && data.listinvnohand) ? data.listinvnohand : [];
                                if (Array.isArray(list) && list.length)
                                {
                                    $.each(list, function (_, it) {

                                    var id = (it.id !== undefined) ? it.id : it.id;
                                    var name = (it.name !== undefined) ? it.name : it.name;
                                    $typeNoHand.append($('<option>', { value: id, text: name }));
                                    });
                                    $typeNoHand.prop('disabled', false);
                                }

                          }

                          if (data.listinventory != null)
                          {

                              JsonArrayInventory = [];

                              for (var i = 0; i < data.listinventory.length; i++)
                              {

                                  var f = data.listinventory[i];

                                  JsonArrayInventory.push({
                                          binid: f.binid,
                                          binname: f.binname,
                                          inventorytypeid : f.inventorytypeid,
                                          typename: f.inventoryname,
                                          statusid: f.statusid,
                                          statusname :f.statusname,
                                          qty: f.qty,
                                          qtypick : `<input type="number"
                                             class="form-control form-control-sm qty-input"
                                             value="${f.qtyreserved}"
                                             min="0" step="1"
                                             data-binid="${f.binid}" data-invtype = "${f.inventorytypeid}" data-statusname="${f.statusid}">`
                                  });
                               }

                               $('#tableuserbinitems').DataTable({
                                   data: JsonArrayInventory,
                                   destroy: true,
                                   processing: true,
                                    deferRender: true,
                                    stateSave: true,
                                    autoWidth: false,
                                    responsive: true,
                                    pageLength: 10,
                                    "bPaginate": false,
                                    "bLengthChange": false,
                                    "bFilter": true,
                                    "bInfo": false,
                                    "bAutoWidth": false,
                                    "searching": false,
                                   columns: [
                                       { "data": "binid" },
                                       { "data": "binname" },
                                       { "data": "inventorytypeid" },
                                       { "data": "typename" },
                                       { "data": "statusid"},
                                       { "data": "statusname" },
                                       { "data": "qty", "class":"derecha" },
                                       { "data": "qtypick", "class":"derecha" },
                                   ]
                               });
                          }
                          else
                          {

                              showToast("info", "There is not inventory available for this type  : " + typeid);

                          }

                          if (data.listbines != null) {

                               var JsonArrayBines = [];

                               for (var i = 0; i < data.listbines.length; i++) {

                                   var f = data.listbines[i];

                                   JsonArrayBines.push({
                                       actions: '<a href="#"onclick="deleteBinDetail(' + f.id + ')"><i id="btt - ' + f.id + '" class="fa-solid fa-eraser fa-lg"></i></a>',
                                       id: f.id,
                                       partno: f.partnumber,
                                       qty: f.qty,
                                       type: f.inventorytype,
                                       typename: f.typename,
                                       binid : f.binid,
                                       binname: f.tagname,
                                       statusid : f.statusid,
                                       statusname :f.statusname
                                   });
                               }

                               showbinDistribution(JsonArrayBines);
                           }

                               const modal = new bootstrap.Modal(document.getElementById('modalBinsDistribution'));
                            modal.show();

                      }
                      else
                      {
                          if (data.continueprocess)
                          {
                              //if continueprocess is true, the processing can to continue
                                showToast("info",data.status);

                                const modal = new bootstrap.Modal(document.getElementById('modalBinsDistribution'));
                                modal.show();
                          }
                          else
                          {
                           errorAction(data.status);
                          }

                      }


              })
              .fail(function(){})
              .always(function(){
               hideSpinner();
              });




          }

          function closemodal()
          {

                     const el = document.getElementById('modalBinsDistribution');
        const inst = bootstrap.Modal.getInstance(el) || bootstrap.Modal.getOrCreateInstance(el);
        inst.hide();

          }

           $('#companyclient').change(function()
        {


            var companyClient = $(this).val();

            var $bin = $('#binselid');
            var $concepts = $('#conceptid');
            var $transactions = $('#transactionid');

            // reset select bins
            $bin.empty()
            .append($('<option>', { value: '', text: '-- Select bin --', disabled:true, selected:true }))
            .prop('disabled', true);

            // reset select concepts
            $concepts.empty()
            .append($('<option>', { value: '', text: '-- Select Concept --', disabled:true, selected:true }))
            .prop('disabled', true);

            // reset select transactions
            $transactions.empty()
            .append($('<option>', { value: '', text: '-- Select Transaction --', disabled:true, selected:true }))
            .prop('disabled', true);



            if (!companyClient) return;

            // antiforgery token (busca el input generado por @Html.AntiForgeryToken())
            var token = $('input[name="__RequestVerificationToken"]').val();

            showSpinner();

            $.ajax({url: '@Url.Action("getAllAditionalInformation", "PickProcess")',type: 'POST',
                    data: { __RequestVerificationToken: token,  companyclient: companyClient }})
            .done(function (res)
            {
                var list = (res && res.data.listbines) ? res.data.listbines : [];
                if (Array.isArray(list) && list.length)
                {
                    $.each(list, function (_, it) {
                    var id = (it.id !== undefined) ? it.id : it.Id;
                    var name = (it.tagName !== undefined) ? it.tagName : it.tagName;
                    $bin.append($('<option>', { value: id, text: name }));
                    });
                    $bin.prop('disabled', false);
                }

                var listc = (res && res.data.listconcepts) ? res.data.listconcepts : [];
                if (Array.isArray(listc) && list.length)
                {
                    $.each(listc, function (_, it) {
                    var id = (it.id !== undefined) ? it.id : it.Id;
                    var name = (it.Name !== undefined) ? it.name : it.name;
                    $concepts.append($('<option>', { value: id, text: name }));
                    });
                    $concepts.prop('disabled', false);
                }


                  var listt = (res && res.data.listinputtransactions) ? res.data.listinputtransactions : [];
                if (Array.isArray(listt) && list.length)
                {
                    $.each(listt, function (_, it) {
                    var id = (it.id !== undefined) ? it.id : it.Id;
                    var name = (it.Name !== undefined) ? it.name : it.name;
                    $transactions.append($('<option>', { value: id, text: name }));
                    });
                    $transactions.prop('disabled', false);
                }
            })
            .fail(function (xhr) {
                console.error('getClientBins FAIL:', xhr.status, xhr.responseText);
                alert('Could not load bins.');
            }).always(function(){

                hideSpinner();
            });
        })


        function buildDropdown(item) {


            var qtypendind = item.qtyshipped - item.qtypending;


            return `
            <div class="dropdown">
                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Actions
                </button>
                <ul class="dropdown-menu">

                    <li>
                        <a class="dropdown-item"  onclick="deleteAllBinsDistribution(${item.line})">🗑 Delete</a>
                    </li>
                    <li>
                        <a class="dropdown-item" onclick="openmodal(${item.lineid}, '${item.partnubmer}', ${item.requestquantity})"> 📦 Bins</a>
                    </li>
                </ul>
            </div>`;
        }

        function addqtybinPickProcess()
        {
              const binidin = $('#binselid').val();

              const typereserveid = $('#typereserveid').val();

              const token = $('input[name="__RequestVerificationToken"]').val();

              var lineid = $('#lineid').val();

              if (binidin == 0 || binidin == null)
              {
                   errorAction("Bin reserve is required");
                   return;
              }


                if (typereserveid == 0 || typereserveid == null)
              {
                   errorAction("Reserve type inventory  is required");
                   return;
              }


              const valsel = $('#companyclient').val();


              if (valsel == 0 || valsel == null)
              {
                   errorAction("Company client is required");
                   return;
              }


              var companyclient = $('#companyclient option:selected').val();


                const table = $('#tableuserbinitems').DataTable();

                const res = [];

                table.$('.qty-input', { page: 'all' }).each(function () {
                const binidout = Number($(this).data('binid'));
                const statusid = $(this).data('statusname');
                const inventorytypeid = $(this).data('invtype');
                const qty   = Number($(this).val() || 0);




                if (qty > 0)
                    {
                    res.push({lineid, binidout, qty, typereserveid, binidin, statusid, inventorytypeid });
                    }
                });

                const payload = {
                    companyclient: companyclient,
                    lineid: lineid,
                    itemslist: res
                };

                showSpinner();

                $.ajax({
                      url: '@Url.Action("UpdateQuantityPickProcess", "PickProcess")',
                      type: 'POST',
                      contentType: 'application/json; charset=utf-8',
                      data: JSON.stringify(payload),
                      headers: { 'RequestVerificationToken': token } // Anti-forgery en header
                    })
                    .done(function (data)
                    {
                       if (data.status == "OK")
                       {
                           loadDataDetail(data.lista);

                       }
                       else
                       {
                            errorAction(data.status);
                       }
                    })
                    .fail(function (xhr) {
                        console.error('getClientBins FAIL:', xhr.status, xhr.responseText);
                        alert('Could not load bins.');
                    }).always(function(){

                        hideSpinner();

                         closemodal();
                    });
        }


        function loadDataDetail(data)
        {
            alert('load detail');

             if (data != null) {

                var JsonArrayBines = [];

                for (var i = 0; i < data.length; i++) {

                    var f = data[i];

                    JsonArrayBines.push({
                        action:'<a href="#" onclick="openmodal(' + f.lindId + ',\'' + f.itemNumber + '\',' + f.requestQuantity +',\'' + f.frm3plLocatorStatus + '\')"><i class="fa-solid fa-boxes-stacked"></i></a> | <a href="#" onclick="deleteAllBinsDistribution(' + f.lindId + ')"><i class="fa-solid fa-eraser"></i></a>',
                        id:f.id,
                        headid:f.idPickProcessHdr,
                        lineid:f.lindId,
                        partnubmer:f.itemNumber,
                        requestquantity:f.requestQuantity,
                        quantityprocess:f.quantityProcess,
                        locator:f.frm3plLocatorStatus,
                        picklpn:f.pickLPN,
                        qtyonhand:f.qtyOnHand,
                        partdesc:f.itemDescription,
                        dateinserted:f.dateTimeInserted
                    });
                }

                $('#tableuser').DataTable({
                    data: JsonArrayBines,
                    destroy: true,
                    scrollX: true,
                    processing: true,
                    deferRender: true,
                    stateSave: true,
                    autoWidth: false,
                    responsive: false,
                    pageLength: 10,
                    "bPaginate": false,
                    "bLengthChange": false,
                    "bFilter": true,
                    "bInfo": false,
                    "bAutoWidth": false,
                    "searching": false,
                    columns: [
                            { "data": "action" },
                        { "data": "id" },
                        { "data": "headid" },
                        { "data": "lineid" },
                        { "data": "partnubmer" },
                        { "data": "requestquantity" },
                        { "data": "quantityprocess" },
                        { "data": "locator" },
                        { "data": "picklpn" },
                        { "data": "qtyonhand" },
                        { "data": "partdesc" },
                        { "data": "dateinserted" },
                    ],
                    createdRow: function (row, data, dataIndex) {
                        // índices según tus columnas: requestquantity=4, quantityprocess=5
                        const $qtyProcessCell = $('td', row).eq(6);

                        // limpiar clases previas
                        $qtyProcessCell.removeClass('text-success text-danger text-primary fw-bold');

                        // tomar valores numéricos seguros
                        const req  = Number(data.requestquantity ?? 0);
                        const proc = Number(data.quantityprocess ?? 0);

                        if (Number.isNaN(req) || Number.isNaN(proc)) return; // nada que pintar si vienen malos

                        if (proc === 0) {
                        // rojo
                        $qtyProcessCell.addClass('text-danger fw-bold');
                        } else if (proc === req) {
                        // verde
                        $qtyProcessCell.addClass('text-success fw-bold');
                        } else if (proc > 0 && proc < req) {
                        // azul
                        $qtyProcessCell.addClass('text-primary fw-bold');
                        }
                    }

                });
            }



        }

        function hideheader()
        {

           const icono = document.getElementById("ocultarHdr");
            const $div1 = $('#header1');
            const $div2 = $('#header2');
            const $div3 = $('#header3');

            if (icono.classList.contains("fa-eye")) {
                $('#ocultarHdr').removeClass("fa-eye");
                $('#ocultarHdr').addClass("fa-eye-slash");
                $div1.animate({ opacity: 0, height: "toggle" }, 400);
                $div2.animate({ opacity: 0, height: "toggle" }, 400);
                $div3.animate({ opacity: 0, height: "toggle" }, 400);

            } else {
                $('#ocultarHdr').addClass("fa-eye");
                $('#ocultarHdr').removeClass("fa-eye-slash");
                $div1.animate({ opacity: 1, height: "toggle" }, 400);
                $div2.animate({ opacity: 1, height: "toggle" }, 400);
                $div3.animate({ opacity: 1, height: "toggle" }, 400);
            }

        }


        function hidedetail()
        {

           const icono = document.getElementById("ocultarDetail");
           const $div1 = $('#detail1');

           if (icono.classList.contains("fa-eye")) {
                $('#ocultarDetail').removeClass("fa-eye");
                $('#ocultarDetail').addClass("fa-eye-slash");
                 $div1.animate({ opacity: 0, height: "toggle" }, 400);
            } else {
                $('#ocultarDetail').addClass("fa-eye");
                $('#ocultarDetail').removeClass("fa-eye-slash");
                 $div1.animate({ opacity: 1, height: "toggle" }, 400);
            }

        }


         function hidecalls()
        {

           const icono = document.getElementById("ocultarCalls");

           const $div1 = $('#divbody1');
           const $div2 = $('#divbody2');

            if (icono.classList.contains("fa-eye")) {
                $('#ocultarCalls').removeClass("fa-eye");
                $('#ocultarCalls').addClass("fa-eye-slash");
                $div1.animate({ opacity: 0, height: "toggle" }, 400);
                $div2.animate({ opacity: 0, height: "toggle" }, 400);
            } else {
                $('#ocultarCalls').addClass("fa-eye");
                $('#ocultarCalls').removeClass("fa-eye-slash");
                $div1.animate({ opacity: 1, height: "toggle" }, 400);
                $div2.animate({ opacity: 1, height: "toggle" }, 400);
            }

        }




          function hidewms()
        {

           const icono = document.getElementById("ocultarWMS");
             const $div = $('#divwms1');

            if (icono.classList.contains("fa-eye")) {
                $('#ocultarWMS').removeClass("fa-eye");
                $('#ocultarWMS').addClass("fa-eye-slash");
               $div.animate({ opacity: 0, height: "toggle" }, 400);

            } else {
                $('#ocultarWMS').addClass("fa-eye");
                $('#ocultarWMS').removeClass("fa-eye-slash");

                $div.animate({ opacity: 1, height: "toggle" }, 400);
            }

        }
        async function processPick()
        {
            const ok = await confirmAction("¿Do you want to proccess this delivery ?");

            if (!ok) return;

            let table = $('#tableuser').DataTable();

            var continueP = true;

            table.rows({ search: 'applied' }).every(function () {
            let data = this.data();  // obtienes el objeto por fila

            let val1 = Number(data.requestquantity);
            let val2 = Number(data.quantityprocess);


                if (val1 !== val2)
                {

                    continueP = false

                }
            });

            if (!continueP)
            {
              errorAction("You must receive all items");
                  return;

            }
            showSpinner();

            $.ajax({url:"@Url.Action("processPick", "PickProcess")", data:{}, type:"post"})
            .done(function(){})
            .fail(function(){})
            .always(function()
            {
                hideSpinner();
            });
        }


        async function deleteAllBinsDistribution(lineid)
        {

              const ok = await confirmAction("¿Do you want to delete all bins distribution for this line " + lineid + "?");

            if (!ok) return;

            showSpinner();

            var token = $('input[name="__RequestVerificationToken"]').val();

            showSpinner();


            $.ajax({url:"@Url.Action("deleteAllBinsDistribution", "PickProcess")", data:{__RequestVerificationToken: token,lineid:lineid}, type:"post"})
            .done(function(data)
            {
                if(data.status == "OK")
                {
                    successAction("Distribution deleted");

                    loadDataDetail(data.lista);
                }
                else
                {
                     errorAction(data.status);
                }
            })
            .fail(function(){})
            .always(function()
            {
                hideSpinner();
            });

        }
    </script>
}